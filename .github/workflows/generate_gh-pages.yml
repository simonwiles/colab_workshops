name: Generate Workshop HTML for gh-pages

on:
  push:
    branches:
      - master
    paths:
      - '**.md'
      - '!**/README.md'


jobs:

  generate-html:
    runs-on: ubuntu-latest
    steps:
    - name: Check files in commit
      run: |
        MDFILES=$(
          curl --silent https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }} |
          jq --raw-output --compact-output --join-output '.files[] | select(.filename | match(".*(?<!README)\\.md")) | {filename, status}');
        if [[ -n $MDFILES ]];
        then
          echo "::set-env name=MDFILES::$MDFILES";
          [[ -n $(echo $MDFILES | jq --raw-output 'select(.status == "removed").filename') ]] && echo "::set-env name=REMOVE::1";
          [[ -n $(echo $MDFILES | jq --raw-output 'select(.status != "removed").filename') ]] && echo "::set-env name=GENERATE::1";
        fi;
        exit 0;

    - name: Checkout Workshops Repo
      uses: actions/checkout@v2
      with:
        path: workshops

    - name: Checkout gh-pages worktree
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: workshops/public

    - name: Remove HTML for deleted markdown files
      if: env.REMOVE
      run: |
        cd workshops;
        for i in $(echo $MDFILES | jq --raw-output 'select(.status == "removed").filename');
        do
          HTML_FILE="public/"$(basename "${i%%.md}.html");
          if [ -e "$HTML_FILE" ];
          then
            echo "Removing $HTML_FILE";
            git rm "$HTML_FILE";
          fi;
        done;

    - name: Checkout HTML generator
      if: env.GENERATE
      uses: actions/checkout@v2
      with:
        repository: sul-cidr/workshop-html-generator
        path: html-generator
    - name: Install dependencies
      if: env.GENERATE
      run: |
        cd html-generator;
        python3 -m pip install --upgrade pip;
        pip3 install setuptools;
        pip3 install -r requirements.txt;
    - name: Generate HTML
      if: env.GENERATE
      run: |
        cd workshops;
        for i in $(echo $MDFILES | jq --raw-output 'select(.status != "removed").filename');
        do
          HTML_FILE="public/"$(basename "${i%%.md}.html");
          echo "Generating $HTML_FILE";
          python3 ../html-generator/gen_html.py -t ../html-generator/template.html "$i" > "$HTML_FILE";
        done;

    - name: Commit HTML
      run: |
        cd workshops/public;
        git config --global user.name "${{ github.actor }}";
        git config --global user.email "${{ github.actor }}@users.noreply.github.com";
        git add --all;
        echo $(git status);
        if [ -n "$(git status --porcelain)" ];
        then
          git commit -m "Auto-generated HTML";
          git push;
        fi;

    - name: Request Github Pages build job
      run: |
        curl --silent --location --request POST \
          --header "Content-Type: application/json" \
          --header "Authorization: token ${{ secrets.PAT }}" \
          "https://api.github.com/repos/${{ github.repository }}/pages/builds";
